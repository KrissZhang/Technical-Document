1.装饰模式：

动态地给一个对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更为灵活。

实现原理：

装饰器继承被装饰类并持有被装饰类的引用，装饰器通过set方法来装饰，装饰器类包含一个重写父类的装饰方法（实质是调用父类的装饰方法和新的装饰逻辑）。

2.

装饰模式是为已有功能动态地添加更多功能的一种方式。当系统需要新的功能的时候就向旧的类中添加新的代码，这些新加的代码通常装饰了原有类的核心职责或主要行为。

3.优点：

(1)把类中的装饰功能从类中搬移去除，这样就可以简化原有的类。

(2)有效地把类的核心职责和装饰功能区分开，去除重复的装饰逻辑。


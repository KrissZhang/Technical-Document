1.代码的问题：

(1)命名规范。
(2)判断分支多次重复判断。
(3)特殊值判断。

2.面向对象：提升复用性。如：活字印刷。

3.降低耦合：

(1)业务逻辑和界面分离。
(2)处理逻辑原子化。

4.简单工厂模式：

(1)具体的运算类继承比较抽象的基础类。
(2)通过工厂方法产生一个具体的计算类来动态地计算结果。

5.UML图：

矩形：类，名称、属性、方法。
<<interface>>：接口，名称、接口方法。
空心三角形加实线：类继承。
空心三角形加虚线：接口实现。
实线箭头：关联（一个类知道另一个类，--持有类属性）。
空心菱形加实线箭头：聚合（弱拥有，A对象可以包含B对象，但B对象不是A对象的一部分）。
实心菱形加实线箭头：组合（强的拥有关系，体现了严格的部分和整体的关系，部分和整体的生命周期相同）。
虚线箭头：依赖关系。如：动物依赖于水和氧气。

注：

聚合和组合是特殊的关联关系，属于关联关系，关联和组合之间的差别在于是否整体和部分的创建时机一致。









1.简介：

http协议即超文本传输协议，规定了浏览器和万维网服务器之间互相通信的规则，通过因特网传送万维网文档的数据传送协议，基于TCP/IP通信协议来传递数据。

2.http协议的特点：

(1)简单快速。
(2)灵活：http允许传输任意类型的数据对象。正在传输的类型由 Content-Type 加以标记。
(3)http0.9和http1.0使用非持续连接，每次连接只处理一个请求，服务器处理结束，客户端收到应答后就断开连接。http1.1使用持续连接，一个连接可以传送多个对象，这种方式可以节省传输时间。
(4)无状态：http是无状态协议，对于事务处理没有记忆能力。
(5)支持B/S和C/S模式。

3.http工作流程：

(1)客户端和服务器建立连接。
(2)建立连接后，客户机发送一个请求给服务器。请求方式的格式为：统一资源标识符(URL)、协议版本号、MIME信息(包括服务信息、实体信息和可能的内容)
(3)服务器接到请求后，给与相应的响应信息，其格式为一个状态行。包括：协议版本号、成功或者错误的响应码、MIME信息(包括服务器信息、实体信息和可能的内容)
(4)客户端接收到服务器返回的信息通过浏览器显示在用户的显示屏上，然后断开客户端和服务器的连接。如果上述步骤发生错误，那么产生的错误信息将返回到客户端，在显示屏上输出。

4.URI和URL的区别：

(1)URI：统一资源标识符，用来标识唯一的资源。

URI一般由三部分组成：

①访问资源的命名机制。
②存放资源的主机名。
③资源自身的名称，由路径表示，着重强调于资源。

(2)URL：统一资源定位器，一种具体的URI，URL可以用来标识一个资源，而且还指明了如何定位这个资源。

URL一般由三部分组成：

①协议(服务方式)
②存有该资源的主机IP地址。(有时也包括端口号)
③主机资源的具体地址。(如：目录和文件名等)

如：

http://host[＂:＂port][abs_path]
https://www.jianshu.com/u/72588c94a841

http表示要通过http协议来定位网络资源；host表示合法的Internet主机域名或者ip地址，port指定一个端口号，为空则使用默认端口80，abs_path指定请求资源的URI(Web上任意的可用资源)。

5.http请求报文：

http报文是面向文本的，报文中的每一个字段都是一些ASCII码串，各个字段的长度是不确定的。一个http请求报文由请求行、请求报文头、空行和请求数据4个部分组成。参考图 http请求报文.png 。

请求行：

请求行由 请求方法、URL字段和http协议的版本组成。

格式：

Method Request-URI HTTP-Version CRLF

Method：表示请求方法。
Request-URI：表示统一资源标识符。
HTTP-Version：表示请求http协议版本。
CRLF：表示回车和换行。(除了作为结尾的CRLF外，不允许出现单独的CR或LF字符)

http请求方法有8种：

GET、POST、HEAD、PUT、DELETE、TRACE、CONNECT、 OPTIONS。

GET：请求获取 Request-URI 所标识的资源。
POST：在 Request-URI 所标识的资源后附加新的数据。
HEAD：请求获取由 Request-URI 所标识的资源的响应消息报头。
PUT：请求服务器存储一个资源，并用 Request-URI 作为其标识。
DELETE：请求服务器删除 Request-URI 所标识的资源。
TRACE：请求服务器回送收到的请求信息，主要用于测试或诊断。
CONNECT：HTTP1.1 协议中预留给能够将连接改为管道方式的代理服务器。
OPTIONS：请求查询服务器的性能，或者查询与资源相关的选项和需求。

使用最多的就是GET 和 POST。


请求报文头：

通知服务器关于客户端请求的信息。


请求数据：参考 http请求示例.png

请求数据不在 GET 方法中使用，而在 POST 方法中使用。POST 方法适用于需要客户填写表单的场合，与请求数据相关的最常用的请求报头是 Content-Type 和 Content-Length。


6.http响应报文：

在接收和解释请求消息后，服务器返回一个 http 响应消息。http 的响应报文由状态行、响应报头、空行、响应正文组成。

(1)状态行：

格式：

HTTP-Version Status-Code Reason-Phrase CRLF

HTTP-Version：表示服务器http协议的版本。
Status-Code：表示服务器发回的响应状态码。
ReasonPhrase：表示状态码的文本描述。

状态码由三位数字组成：第一个数字定义了响应的类别，有以下5种可能取值：

100～199：指示信息，收到请求，需要请求者继续执行操作。
200～299：请求成功，请求已被成功接收并处理。
300～399：重定向，要完成请求必须进行更进一步的操作。
400～499：客户端错误，请求有语法错误或请求无法实现。
500～599：服务器错误，服务器不能实现合法的请求。

常见的状态码：

200 OK：客户端请求成功。
301 ：请求永久重定向。
400 Bad Request：客户端请求有语法错误，服务器无法理解。
401 Unauthorized：请求未经授权，这个状态码必须和 WWW-Authenticate 报头域一起使用。
403 Forbidden：服务器收到请求，但是拒绝提供服务。
500 Internal Server Error：服务器内部错误，无法完成请求。
503 Server Unavailable：服务器当前不能处理客户端的请求，一段时间后可能恢复正常。

(2)响应报头：

用于服务器传递自身信息的响应。

(3)响应正文：

服务器返回的资源内容。


7.http的消息报头：

消息报头分为通用报头、请求报头、响应报头、实体报头等。消息报头由键值对组成，每行一对，关键字和值用英文冒号 "：" 分隔。

(1)通用报头：既可以出现在请求报头，也可以出现在响应报头中。

Date：表示消息产生的日期和时间。
Connection：允许发送指定连接的选项。例如：指定连接是连续的或者指定 "close" 选项，通知服务器，在响应完成后，关闭连接。
Cache-Control：用于指定缓存指令，缓存指令是单向(响应中出现的缓存指令在请求中未必会出现)且独立的(一个消息的缓存指令不会影响另一个消息处理的缓存机制)。

(2)请求报头：在请求行之后会有0个或者多个请求报头，请求报头通知服务器关于客户端请求的信息。

典型请求报头如下：

Host：请求的主机名，允许多个域名同处一个ip地址，即虚拟主机。
User-Agent：发送请求的浏览器类型、操作系统等信息。
Accept：客户端可识别的内容类型列表，用于指定客户端接收哪些类型的信息。
Accept-Charset：请求报头域用于指定客户端接受的字符集。
Accept-Encoding：客户端可识别的数据编码。
Accept-Language：表示浏览器所支持的语言类型。
Authorization：请求报头域主要用于证明客户端有权查看某个资源。
Connection：允许客户端和服务器指定与请求/响应连接有关的选项。例如，这时为 Keep-Alive 则表示：保持连接。
Transfer-Encoding：告知接收端为了保证报文的可靠传输，对报文采用了什么编码方式。

(3)响应报头：用于服务器传递自身信息的响应。

常见的响应报头如下：

Location：用于重定向接收者到一个新的位置，常用在更换域名的时候。
Server：包含服务器用来处理请求的系统信息，与 User-Agent 请求报头是相对应的。

(4)实体报头：用来定义被传送资源的信息，既可用于请求也可用于响应，请求和响应消息都可以传送一个实体。

常见实体报头如下：

Content-Type：发送给接收者的实体正文的媒体类型。
Content-Lenght：实体正文的长度。
Content-Language：描述资源所用的自然语言。
Content-Encoding：实体报头被用作媒体类型的修饰符。它的值指示了已经被应用到实体正文的附加内容的编码，因而要获得 Content-Type 报头域中所引用的媒体类型，必须采用相应的解码机制。
Last-Modified：实体报头用于指示资源的最后修改日期和时间。
Expires：实体报头给出响应过期的日期和时间。

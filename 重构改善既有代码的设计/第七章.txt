在对象之间搬移特性：

1.搬移函数：(eclipse中的move移动的是类，而不能仅仅移动方法)

出现场景：一个函数与本类之外的另一个类的关系更为密切。

解决方案：在该函数联系最为紧密的类中创建一个新的函数并移除旧的函数。

2.搬移字段：

使用场景和解决方式与搬移方法类似。

3.提炼类：(这里可以使用eclipse中的Extract Class来产生新提炼出来的类)

出现场景：某个类做了超过一个类应该做的事情。

解决方案：新建一个新的类，对原来的类进行拆分。

4.将类内联化：相当于提炼类的逆过程。

5.隐藏"委托关系":

相当于屏蔽委托对象的信息，使用get方法直接拿到目标资源而不暴露委托对象的信息。

如：obj.value  替换成   source.getObj().getValue();

6.移除"中间人"：相当于隐藏委托关系的逆过程。

7.引入外加函数：相当于将服务类的功能写到调用服务类的客户类中并传递服务类资源。

场景：为提供服务的类增加一个新的函数，但是被告知禁止修改这个类。

解决方案：在客户类中建立一个函数，并以第一参数形式传入一个服务类实例。

8.引入本地扩展：

场景：解决的也是功能扩展的问题，只是手段不相同。

解决方案：建立一个新类，使它包含这些额外函数。让这个扩展类成为源类的子类或者包装类。











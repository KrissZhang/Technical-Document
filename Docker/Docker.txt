1.什么是Docker：

是一个用来装应用的容器。

跨平台，支持Windows、Linux、Mac。

2.理解Docker：

(1)Docker思想：

集装箱：

       -> 运输方式
标准化 -> 存储方式
       -> API接口

隔离：容器内部有自己的容器环境

(2)解决的问题：

运行环境不一致

用户环境未隔离

批量部署服务器(快速扩展、弹性伸缩)

3.Docker核心技术：

Docker的部署过程：可以理解为去仓库把镜像拿到本地，然后用命令把镜像运行起来。

镜像：就是之前所说，鲸鱼驮着的集装箱。本质上是一系列文件，包括应用程序文件和运行环境文件等。分层存储，互不干扰。

仓库：官方提供服务的地址，hub.docker.com，国内网易蜂巢仓库，c.163.com，其他等等。

容器：

4.Docker安装：

Windows下，Win10 和 非Win10 系统的安装包不一样，需要分别下载。

安装完成后，双击启动 Docker Quickstart Terminal。

输入命令：docker version，如果能显示版本信息，则表示安装成功。

5.Docker基本操作：

(1)拉取镜像：

docker pull [OPTIONS] NAME [:TAG]

如：docker pull hello-world

(2)查看本机有哪些镜像：可以用来验证拉取是否成功。

docker images [OPTIONS] [REPOSITORY[:TAG]]

(3)运行容器：

docker run [OPTIONS] IMAGE [:TAG] [COMMAND] [ARG...]

6.Docker运行Nginx：

(1)进入镜像中心，搜索Nginx镜像，复制下载地址，放入客户端拉取。

(2)运行Nginx：

查看在这台服务器上正在运行的容器：docker ps

后台运行容器：docker run -d IMAGE

进入容器内部：docker exec，后接 --help，表示查看命令帮助。
docker exec -it f4 bash                 //f4表示镜像名称的一部分，这里镜像很少，所以可以找得到。执行命令后，相当于进入了Linux的根目录，可以执行相关命令(如：ls)。使用命令 exit 退出容器内部。

7.Docker的网络：

网络类型：
Bridge：独立使用一个网络空间。会虚拟出自己的网卡。
Host：和主机共同使用一个网络空间。
None：不使用网络。

端口映射：

停止运行容器：docker stop f4          //这里容器ID可以使用部分名称

指定端口运行容器：

docker run -d -p 主机端口:容器端口 容器名字

如：docker run -d -p 8080:80 hub.c.163.com/library/nginx

随机端口运行容器：

docker run -d -P 容器名字

该命令会返回端口映射关系

注意：如果是在Windows下安装的Docker，实际上是在Windows中虚拟的一个Linux，所以运行的容器需要通过虚拟的Linux IP来访问。

8.制作自己的镜像：

Dockerfile：告诉Docker制作镜像的每一步操作是什么。

docker build：构建。

演示用Web项目：JPress。

步骤：

(1)获取Web项目。

(2)编辑Dockerfile，应该事先拉取基础镜像。

Dockerfile：

from hub.c.163.com/library/tomcat                                      //基础镜像名

MAINTAINER zp xxx@163.com                                              //镜像作者

COPY jpress.war /usr/local/tomcat/webapps                              //拷贝项目文件到tomcat项目运行目录

(3)构建镜像并指定名称：

docker build -t jpress:latest

9.运行自己的镜像：

使用前文中的run命令运行镜像容器。

容器运行后检查端口是否开放：netstat -na|grep 端口号

如果还需要其他镜像组件，可以用相同的方法拉取和运行。


特别注意容器内外的隔离关系。


重启容器：docker restart



























































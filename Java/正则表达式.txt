1.在线工具：

https://c.runoob.com/front-end/854

2.概要教程：

https://www.cnblogs.com/sunny3096/p/7201403.html

3.定义：

用于文本匹配的工具。

4.语法：

(1)特殊代码：

.     匹配除换行符以外的任意字符
\w    匹配字母或数字
\s    匹配任意的空白符
\d    匹配数字
\b    匹配单词的开始或结束
^     匹配字符串的开始
$     匹配字符串的结束

(2)字符转义：

.     \.
*     \*
\     \\

(3)重复：

*     重复0次或更多次
+     重复一次或更多次
?     重复0次或一次
{n}   重复n次
{n,}  重复n次或更多次
{n,m} 重复n到m次

(4)字符串：使用非预定义的字符集。

使用中括号将匹配的字符括起来，如：[aeiou]、[A-Z0-9a-z]

注：中括号内特殊代码不会被解释成其他意思，直接取字面意思。

(4)反义：非。

\W    匹配任意不是字母和数字的字符
\S    匹配任意不是空白符的字符
\D    匹配任意非数字的字符
\B    匹配不是单词开头或结束的位置
[^X]  匹配除了X以外的任意字符
[^aeiou]    匹配除了aeiou以外的任意字符

(5)替换：或。

|     或，如：\d{2}|\d{3}

(6)分组：

用小括号来指定子表达式，并对子表达式进行操作，如：(\w{3,5})

每个分组会自动拥有一个组号，从左到右从1开始，如：\1匹配分组1的文本。注：这里测试时并没能达到目标，用下面别名的方式。

用(?<word>\d{3,5}>)来定义组，在后面用\k<word>来引用组。如：^(?<abc>\d{2}).*\k<abc>$

(7)零宽断言：指定位置。

(?=exp)：零宽先行断言，如：.*(?=end)，匹配end前的任意文本。

(?<=exp)：零宽后行断言，如：(?<=end).*，匹配end后的任意文本。

(8)贪婪模式/懒惰模式：

默认为贪婪模式，尽可能多地匹配。

懒惰模式：

*?      重复任意次，但尽可能少重复
+?      重复1次或更多次，但尽可能少重复
??      重复0次或1次，但尽可能少重复
{n,m}?  重复n到m次，但尽可能少重复
{n,}?   重复n次以上，但尽可能少重复
































